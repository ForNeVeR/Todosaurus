# SPDX-FileCopyrightText: 2024 Todosaurus contributors <https://github.com/ForNeVeR/Todosaurus>
#
# SPDX-License-Identifier: MIT

name: Release
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:

  # Prepare and publish the plugin to JetBrains Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Read version from Git ref
        id: version
        shell: pwsh
        run: echo "version=$(if ($env:GITHUB_REF.StartsWith('refs/tags/v')) { $env:GITHUB_REF -replace '^refs/tags/v', '' } else { 'next' })" >> $env:GITHUB_OUTPUT

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Read the changelog
        uses: ForNeVeR/ChangelogAutomation.action@v1
        with:
          input: ./CHANGELOG.md
          output: ./changelog-section.md

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: Todosaurus-${{ steps.version.outputs.version }}.zip
          path: build/distributions/Todosaurus-${{ steps.version.outputs.version }}.zip

      - name: Upload the changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog-section.md
          path: ./changelog-section.md

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Create the release
        shell: pwsh
        run: scripts/New-Release.ps1 -Version $env:VERSION -ReleaseNotesFilePath ./changelog-section.md -FileToUpload $env:FILE_TO_UPLOAD
        env:
          VERSION: ${{ steps.version.outputs.version }}
          FILE_TO_UPLOAD: build/distributions/Todosaurus-${{ steps.version.outputs.version }}.zip

      # Publish the plugin to JetBrains Marketplace
      - if: startsWith(github.ref, 'refs/tags/v')
        name: Publish the plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin
