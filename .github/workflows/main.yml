# SPDX-FileCopyrightText: 2000-2021 JetBrains s.r.o.
# SPDX-FileCopyrightText: 2024 Todosaurus contributors <https://github.com/ForNeVeR/Todosaurus>
#
# SPDX-License-Identifier: Apache-2.0

# GitHub Actions Workflow is created for testing and preparing the plugin release in the following steps:
# - Validate Gradle Wrapper.
# - Run 'test' and 'verifyPlugin' tasks.
# - Run Qodana inspections.
# - Run the 'buildPlugin' task and prepare artifact for further tests.
# - Run the 'runPluginVerifier' task.
#
# The workflow is triggered on push and pull_request events.
#
# GitHub Actions reference: https://help.github.com/en/actions
#
## JBIJPPTPL

name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g., for dependabot pull requests)
  push:
    branches: [ main ]
  # Trigger the workflow on any pull request
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Prepare environment and build the plugin
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: 'Cache downloaded JDK'
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/gradle-jvm
            ~/AppData/Local/gradle-jvm
          key: ${{ runner.os }}-${{ hashFiles('gradlew*') }}

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Build plugin
      - name: Build plugin
        run: ./gradlew buildPlugin

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content

          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      # Store already-built plugin as an artifact for downloading
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/content/*/*

  # Run tests
  test:
    name: Test
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      # Run tests
      - name: Run Tests
        run: ./gradlew check

  # TODO[#156]: Disabled due to https://youtrack.jetbrains.com/issue/QD-10820
  # Run Qodana inspections and provide report
#  inspectCode:
#    name: Inspect code
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      checks: write
#      pull-requests: write
#    steps:
#
#      # Free GitHub Actions Environment Disk Space
#      - name: Maximize Build Space
#        uses: jlumbroso/free-disk-space@main
#        with:
#          tool-cache: false
#          large-packages: false
#
#      # Check out current repository
#      - name: Fetch Sources
#        uses: actions/checkout@v4
#
#      # Set up Java environment for the next steps
#      - name: Setup Java
#        uses: actions/setup-java@v4
#        with:
#          distribution: oracle
#          java-version: 21
#
#      # Run Qodana inspections
#      - name: Qodana - Code Inspection
#        uses: JetBrains/qodana-action@v2024.3.4
#        with:
#          cache-default-branch-only: true

  # Run plugin structure verification along with IntelliJ Plugin Verifier
  verify:
    name: Verify plugin
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Run Verify Plugin task and IntelliJ Plugin Verifier tool
      - name: Run Plugin Verification tasks
        run: ./gradlew :verifyPlugin

      # Collect Plugin Verifier Result
      - name: Collect Plugin Verifier Result
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pluginVerifier-result
          path: ${{ github.workspace }}/build/reports/pluginVerifier

  licenses:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the sources
        uses: actions/checkout@v4
      - name: REUSE license check
        uses: fsfe/reuse-action@v5
